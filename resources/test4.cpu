7
F8000000

6
07C00000
003E0000
0001F000
00000C00
00000300
000000C0
4
add 10000000
sub 30000000
or 60000000
and 70000000


2
07C00000
0000FFFF
1
limm 50000000


4
07C00000
003E0000
00000030
00000003
3
store 40000000
load 20000000
loadr f0000000

1
07FFFFFF
4
jmp 80000000
ret 90000000
bz b0000000
bnz c0000000

2
07C00000
003FFFFF
1
cmp a0000000

1
00000001
1
zero_flag 08000000

1
0000001F
2
push d0000000
pop e0000000


//alu masks: first oper reg,sec oper reg, dst reg, reg type
07C00000
003E0000
0001F000
00000C00
00000300
000000C0


//load immedite masks: dest reg, value
07C00000
0000FFFF
	
//memory op masks: reg with value(store)/ dest reg(load) reg with addres(load and store) reg types
07C00000
003E0000
00000030
00000003

//conditional op masks: addr to jump to
07FFFFFF

//cmp masks: reg to compare, value to compare
07C00000
003FFFFF

//flag masks: zero flag
00000001

//push and pop masks 
0000001F
